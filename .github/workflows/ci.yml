name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHONPATH: ${{ github.workspace }}/src

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies with pip
      run: |
        python -m pip install --upgrade pip
        pip install torch>=2.0.0 numpy>=1.24.0 pandas>=2.0.0 pytest>=7.0.0 pytest-cov>=4.0.0
        pip install black>=23.0.0 ruff>=0.1.0 mypy>=1.5.0 scikit-learn>=1.3.0
        pip install matplotlib seaborn plotly scipy polars statsmodels
        pip install bandit safety

    - name: Verify installation
      run: |
        python -c "import torch; print(f'PyTorch version: {torch.__version__}'); print(f'CUDA available: {torch.cuda.is_available()}')"
        python -c "import pandas; import numpy; import sklearn; print('✅ All core dependencies imported')"

    - name: Install package in development mode
      run: |
        pip install -e .

    - name: Run code formatting check (Black)
      run: |
        black --check --diff . || echo "⚠️ Black formatting issues found (non-blocking)"
      continue-on-error: true

    - name: Run linting (Ruff)
      run: |
        ruff check . || echo "⚠️ Ruff linting issues found (non-blocking)"
      continue-on-error: true

    - name: Run type checking (MyPy)
      run: |
        mypy src/ --ignore-missing-imports || echo "⚠️ MyPy type checking issues found (non-blocking)"
      continue-on-error: true

    - name: Run tests with coverage
      run: |
        echo "Running tests with coverage..."
        pytest tests/ --cov=src/analytics_toolkit --cov-report=xml --cov-report=term-missing -v --tb=short

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload coverage to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/



  notify-status:
    runs-on: ubuntu-latest
    needs: [test]
    if: always()

    steps:
    - name: Notify success
      if: ${{ needs.test.result == 'success' }}
      run: |
        echo "✅ Tests passed successfully!"
        echo "- Tests: ${{ needs.test.result }}"

    - name: Notify failure
      if: ${{ needs.test.result == 'failure' }}
      run: |
        echo "❌ Tests failed:"
        echo "- Tests: ${{ needs.test.result }}"
        exit 1